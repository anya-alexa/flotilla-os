webpackJsonp([60335399758886],{100:function(e,t){e.exports={data:{allMarkdownRemark:{edges:[{node:{id:"/Users/patricksun/goworkspace/src/github.com/stitchfix/flotilla-os/src/docs/docs-0-introduction.md absPath of file >>> MarkdownRemark",excerpt:"Flotilla is a self-service framework that dramatically simplifies the process of defining and executing containerized jobs. This means you get to focus on the work you're doing rather than  how  to do it. Once deployed, Flotilla allows you to: Define…",frontmatter:{path:"/docs/introduction",title:"Introduction",group:"docs",index:"0"}}},{node:{id:"/Users/patricksun/goworkspace/src/github.com/stitchfix/flotilla-os/src/docs/docs-1-philosophy.md absPath of file >>> MarkdownRemark",excerpt:"Flotilla is strongly opinionated about self-service for data science. The core assumption is that you understand your work the best. Therefore, it is  you  who should own your work from end-to-end. In other words, you shouldn't need to be a…",frontmatter:{path:"/docs/philosophy",title:"Philosophy",group:"docs",index:"1"}}},{node:{id:"/Users/patricksun/goworkspace/src/github.com/stitchfix/flotilla-os/src/docs/docs-2-quick-start.md absPath of file >>> MarkdownRemark",excerpt:"Minimal Assumptions Before we can do  anything  there's some  prerequistes  that must be met. Flotilla by default uses AWS. You must have an AWS account and the credentials available to you in a way that standard AWS tools can access. That is, the…",frontmatter:{path:"/docs/quick-start",title:"Quick Start",group:"docs",index:"2"}}},{node:{id:"/Users/patricksun/goworkspace/src/github.com/stitchfix/flotilla-os/src/docs/docs-3-definitions-and-task-life-cycle.md absPath of file >>> MarkdownRemark",excerpt:"Definitions Name Definition task A definition of a task that can be executed to create a  run run An instance of a task Task Life Cycle When executed, a task's run goes through several transitions QUEUED  - this is the first phase of a run and means…",frontmatter:{path:"/docs/definitions-and-task-life-cycle",title:"Definitions and Task Life Cycle",group:"docs",index:"3"}}},{node:{id:"/Users/patricksun/goworkspace/src/github.com/stitchfix/flotilla-os/src/docs/docs-4-deploying.md absPath of file >>> MarkdownRemark",excerpt:"In a production deployment you'll want multiple instances of the flotilla service running and postgres running elsewhere (eg. Amazon RDS). In this case the most salient detail configuration detail is the  DATABASE_URL . Docker based deploy The…",frontmatter:{path:"/docs/deploying",title:"Deploying",group:"docs",index:"4"}}},{node:{id:"/Users/patricksun/goworkspace/src/github.com/stitchfix/flotilla-os/src/docs/docs-5-development.md absPath of file >>> MarkdownRemark",excerpt:"API Documentation See  API Building Currently Flotilla is built using  go  1.9.3 and uses the  govendor  to manage dependencies.",frontmatter:{path:"/docs/development",title:"Development",group:"docs",index:"5"}}}]}},layoutContext:{}}}});
//# sourceMappingURL=path----96c79fb42f5a7c67645a.js.map